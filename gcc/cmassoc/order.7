.TH order 7 "December 2012" "plc-utils-2.1.3" "Qualcomm Atheros Powerline Toolkit"

.SH NAME
order - topological sort

.SH SYNOPSIS
.BR order 
.RI [ options ]
.IR file
.RI [ file ]
.RI [ ... ]
.RI [> stdout ]
.PP
.BR order
.RI [< stdin ]
.RI [> stdout ]

.SH DESCRIPTION
Read object relationships from stdin and print object names on stdout in topological order.
Relationships are expressed as object name pairs with the names separated by a colon.
The nature of the relationship is unspecified and left to the user's imagination. 
.PP
In mathematical terms, the \fBobjects\fR are \fBnodes\fR and the \fBrelationships\fR are \fBdirected edges\fR that connect nodes. Collectively, they form a \fBDirected Acyclic Graph\fR (\fBDAG\fR). The term \fBacyclic\fR means no circular relationships exist.
.PP
DAGs can represent component dependencies, solution alteratives or potential routes on a journey.
.SH OPTIONS
.TP
.RB - l
Display object level. Objects are printed in topological order but each is prefixed with an integer that indicates the distance for the starting object. With this option, several objects may have the same level because they are the same distance from the starting object.
.TP
.RB - o
Display object order. Objects are printed in topological order but each is prefixed with an integer that indicates the topological order. With this option, no two objects have the same order.
.TP
.RB - x
Exchange the order of name pairs on input. This inverts (reverses) the relationship between all objects. 
.SH ARGUMENTS
.TP
.RB file
The name of a relationship file. The file should contains one or more relationship definitions, one per line. Each definition consists of two name separated by a semicolon. Names cannot contain white space or punctuation. 
.SH EXAMPLES
Given a relationship definition file, \fBabc.txt\fR, that looks like this:
.PP
   A1:B1
   A1:B2
   B1:C1
   C1:D1
   C1:D2
   B2:C2
   C2:D3
   D3:E1
   E1:F1
   B2:F1
.PP
The

.SH SEE ALSO
None.
.SH CREDITS
 Charles Maier <cmaier@cmassoc.net>

