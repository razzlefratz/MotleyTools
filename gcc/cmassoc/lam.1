.TH lam 1 "May 2013" "cmassoc-tools-1.9.0" "Motley Tools"

.SH NAME
lam - laminate files

.SH SYNOPSIS
.BR lam
.RI [ options ]
.IR file
.IR file
.RI [ file ] 
.RI [ ... ]

.SH DESCRIPTION
Either concatenate or interleave lines from multiple files.
Input lines may be quoted and separated by user defined delimiters on output.
If input files have different line counts then empty fields or blank lines will appear in the output.

.PP
This program is similar to the Linux \fBpaste\fR utility by can quote input lines to produce comma separated value (csv) files.

.SH OPTIONS
Long options are not supported.
All options are single letters.

.TP
-\fBf\fI character\fR
Separate input lines using the given character on output.
This converts input lines to output fields.
The first character is used if multiple characters are specified.
Common characters are comma, colon and semicolon.

.TP
.RB - n
Separate input lines with a newline (lf) on output.
This causes input lines to be interleaved on output.
It is equivalent to option \fB-f '\\n'\fR but is easier to specify.

.TP
-\fBq\fI character\fR
Enclose input lines with the given character on output.
This converts input lines to literal strings.
The first character is used if multiple characters are specified.
Common characters are quote and apostrophe.

.TP
.RB - s
Separate input lines with a space (sp) on output.
It is equivalent to option \fB-f ' '\fR but is easier to specify.

.TP
.RB - t
Separate input lines with a horizontal tab (ht) on output.
It is equivalent to option \fB-f '\\t'\fR but is easier to specify.

.TP
.RB - v
Separate input lines with a comma and enclose them in quotes on output.
This produces a robust comma separated value (csv) file.
It is equivalent to option \fB-f ','\fR plus \fB-q '\\"'\fR but is easier to specify.

.TP
.RB - ? ,-- help
Print program help summary on stdout.
This option takes precedence over previous command line options.

.TP
.RB - ! ,-- version
Print program version information on stdout.
This option takes precedence over previous command line options.

.SH ARGUMENTS

.TP
.IR file
The name of a text file.
The file is not modified by this program.

.SH EXAMPLES
Assume that we have the following three files named \fBabc.txt\fR, \fBdef.txt\fR and \fBghi.txt\fR.
The line numbers shown are are for reference and are not part of file content.

.PP
   1 1234567890
   2  
   3 1234567890
   4 1234567890
   5 1234567890

.PP
   1 ABCDEF
   2 ABCDEF
   3 ABCDEF

.PP
   1 abcdef
   2 abcdef
   3 abcdef
   4 abcdef
   5 abcdef
   6 abcdef

.PP
This example concatenates corresponding lines from each file.
The number of lines output is the same as the longest input file.
No delimiters are output in this example and so it is difficult to see where empty input lines occur.

.PP
   # lam abc.txt def.txt ghi.txt
   1234567890ABCDEFabcdef
   ABCDEFabcdef
   1234567890ABCDEFabcdef
   1234567890abcdef
   1234567890abcdef
   abcdef

.PP
The next example uses the \fB-f\fR option to separate input lines with a comma on output.
This preserves the relative position of empty input lines.
The comma is enclosed in quotes so that the shell does not attempt to interpret it.

.PP
   # lam abc.txt def.txt ghi.txt -f ","
   1234567890,ABCDEF,abcdef
   ,ABCDEF,abcdef
   1234567890,ABCDEF,abcdef
   1234567890,,abcdef
   1234567890,,abcdef
   ,,abcdef

.PP
The next example uses option \fB-v\fR to enclose input lines in quotes and separate them with comma on output.
This creates a comma separated value file that can be loaded into a database or spreadsheet.

.PP
   # lam abc.txt def.txt ghi.txt -v
   "1234567890","ABCDEF","abcdef"
   "","ABCDEF","abcdef"
   "1234567890","ABCDEF","abcdef"
   "1234567890","","abcdef"
   "1234567890","","abcdef"
   "","","abcdef"
   "","",""

.SH SEE ALSO
.BR blank (7 ),
.BR crlf ( 7 ), 
.BR enfix ( 7 ),
.BR trim ( 7 )

.SH CREDITS
 Charles Maier <cmaier@cmassoc.net>
